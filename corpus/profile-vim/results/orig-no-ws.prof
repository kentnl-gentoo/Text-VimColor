SCRIPT  /data/raptor/devel/projects/perl/Text-VimColor/share/mark.vim
Sourced 1 time
Total time:   0.005803
 Self time:   0.004903

count  total (s)   self (s)
                            " mark.vim - turn Vim syntax highlighting into an ad-hoc markup language that
                            " can be parsed by the Text::VimColor Perl module.
                            "
                            " Author: Geoff Richards <qef@laxan.com>
                            " Maintainer: Randy Stauner <rwstauner@cpan.org>
                            " Based loosely on 2html.vim, by Bram Moolenaar <Bram@vim.org>,
                            "   modified by David Ne\v{c}as (Yeti) <yeti@physics.muni.cz>.
                            
    1              0.000014 set report=1000000
                            
                            " For some reason (I'm sure it used to work) we now need to get Vim
                            " to make another attempt to detect the filetype if it wasn't set
                            " explicitly.
    1              0.000005 if !strlen(&filetype)
                               filetype detect
                            endif
    1              0.000031 syn on
                            
                            " Set up the output buffer.
    1   0.000094   0.000093 new
    1              0.000004 set modifiable
    1              0.000002 set paste
                            
                            " Expand tabs. Without this they come out as '^I'.
    1              0.000029 set isprint+=9
                            
    1   0.000007   0.000005 wincmd p
                            
                            " Loop over all lines in the original text
    1              0.000006 let s:end = line("$")
    1              0.000002 let s:lnum = 1
   11              0.000031 while s:lnum <= s:end
                            
                              " Get the current line
   10              0.000036   let s:line = getline(s:lnum)
   10              0.000033   let s:len = strlen(s:line)
   10              0.000018   let s:new = ""
                            
                              " Loop over each character in the line
   10              0.000012   let s:col = 1
   33              0.000040   while s:col <= s:len
   31              0.000062     let s:startcol = s:col " The start column for processing text
   31              0.000425     let s:id = synID(s:lnum, s:col, 1)
   31              0.000079     let s:col = s:col + 1
                                " Speed loop (it's small - that's the trick)
                                " Go along till we find a change in synID
  910              0.002006     while s:col <= s:len && s:id == synID(s:lnum, s:col, 1) | let s:col = s:col + 1 | endwhile
                            
                                " Output the text with the same synID, with class set to c{s:id}
   31              0.000076     let s:id = synIDtrans(s:id)
   31              0.000096     let s:name = synIDattr(s:id, 'name')
   31              0.000457     let s:new = s:new . '>' . s:name . '>' . substitute(substitute(substitute(strpart(s:line, s:startcol - 1, s:col - s:startcol), '&', '\&a', 'g'), '<', '\&l', 'g'), '>', '\&g', 'g') . '<' . s:name . '<'
                            
   31              0.000048     if s:col > s:len
    8              0.000005       break
                                endif
   23              0.000021   endwhile
                            
   10   0.000820   0.000787   exe "normal \<C-W>pa" . strtrans(s:new) . "\n\e\<C-W>p"
   10              0.000047   let s:lnum = s:lnum + 1
   10              0.000006   +
   10              0.000011 endwhile
                            
    1   0.000004   0.000003 wincmd p
    1              0.000020 normal dd

